res4true[ijk,6] <- 1-mean(res2_true$srmr < .05,na.rm=T)
res4true[ijk,7] <- 1-mean(res2_true$gfi > .95,na.rm=T)
res4true[ijk,8] <- 1-mean(res2_true$agfi > .95,na.rm=T)
res4true[ijk,9] <- 1-mean(res2_true$cgfi > .95,na.rm=T)
# good fit is enough:
#cutoffs acceptable fit
#res4[ijk,1] <- 1-mean(res1_miss$pvalue>.05,na.rm=T)
#res4[ijk,2] <- 1-mean(res1_miss$chisq < 3*res1_miss$df,na.rm=T)
#res4[ijk,3] <- 1-mean(res1_miss$cfi > .90,na.rm=T)
#res4[ijk,4] <- 1-mean(res1_miss$tli > .95,na.rm=T)
#res4[ijk,5] <- 1-mean(res1_miss$rmsea < .08,na.rm=T)
#res4[ijk,6] <- 1-mean(res1_miss$srmr < .08,na.rm=T)
cond0[ijk,] <- c(time_point,person_size,type_MISS,model_TRUE_MISS)
ijk <- ijk+1 # adding a new line
}
}
}
}
}
#save all data
res3false2 <- res3false
res4false2 <- res4false
res3true2  <- res3true
res4true2  <- res4true
# omit missing data
res3false1 <- na.omit(cbind(cond0,res3false))[,-(1:4)]
res4false1 <- na.omit(cbind(cond0,res4false))[,-(1:4)]
res3true1 <- na.omit(cbind(cond0,res3true))[,-(1:4)]
res4true1 <- na.omit(cbind(cond0,res4true))[,-(1:4)]
cond1 <- na.omit(cbind(cond0,res4false))[,(1:4)]
cond2 <- na.omit(cbind(cond0,res4true))[,(1:4)]
# check dimensions
dim(cond1)
dim(cond2)
# put col names
res3false <- res3false1
res4false <- res4false1
res3true  <- res3true1
res4true  <- res4true1
cond0 <- cond1
colnames(cond0) <- c("Nt.f","N.f","type","miss.f")
# for plotting:
# as continous measure:
cond0$Nt <- as.numeric(cond0$Nt.f)
cond0$N <- as.numeric(cond0$N.f)
cond0$miss <- as.numeric(cond0$miss.f)
# as factor
cond0$Nt.f <- factor(cond0$Nt,levels = c("1","2","3","4","5","10","15","30"))
cond0$N.f <-  factor(cond0$N,levels=paste0(sort(person_size_SIMULATE)))
cond0$type <- as.factor(cond0$type)
colnames(res3false) <- colnames(res3true) <- c("chi2/df",fitnom,"nconv")
colnames(res4false) <- colnames(res4true) <- c("chi2_p","chi2/df",fitnom)
#cbind(cond0,res2_true)
cbind(cond0,res3false)
cbind(cond0,res4false)
range(res3false$nconv)
hist(res3false$nconv)
range(res3true$nconv)
hist(res3true$nconv)
### PLOTTING, developing own plot
plotfun <- function(dat,miss0,misstyp,who,woline=.8,ord=F){ # who selects one of fit indices, wholine = 0.8 for power
#dat<-res3
#miss0<-0
#who<-"chi2_p"
#misstyp<-"none"
par(new=F)
j<-1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$Nt.f==levels(cond0$Nt.f)[j]
if(ord==F){
plot(sort(cond0$N[cond11]),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(0,max(cond0$N)),col=j,pch=j,type="b",
axes=F,xlab="N",ylab="% rejected",main=who)
}else{
plot(sort(log(cond0$N[cond11])),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(log(min(cond0$N)),log(max(cond0$N))),col=j,pch=j,type="b",
axes=F,xlab="N",ylab="% rejected",main=who)
}
for(j in 2:length(levels(cond0$Nt.f))){#j <- length(levels(cond0$Nt.f))
par(new=T)
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$Nt.f==levels(cond0$Nt.f)[j]
if(ord==F){
plot(sort(cond0$N[cond11]),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(0,max(cond0$N)),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}else{
plot(sort(log(cond0$N[cond11])),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(log(min(cond0$N)),log(max(cond0$N))),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}
}
if(ord==F){
axis(1,person_size_SIMULATE)
}else{
axis(1,at=log(person_size_SIMULATE),labels=person_size_SIMULATE)
}
axis(2)
abline(h=woline,lty=3)
legend("topright",paste0("N_t=",levels(cond0$Nt.f)),lty=1,col=1:length(levels(cond0$Nt.f)),pch=1:length(levels(cond0$Nt.f)))
}
# LABELING:
plotfun(res3,miss0=0,misstyp="none",who="chi2_p",woline=.05,ord=T)
##########################################################################
# x-axis is Nt and separate lines for N, looks better
##########################################################################
plotfun2 <- function(dat,miss0,misstyp,who,woline=.8,not1=F){
#dat<-res2_true
#miss0<-0
#who<-"chi2_p"
par(new=F)
j<-1
if(not1==T){
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
plot(cond0$Nt[cond11],dat[cond11,who],
#l0+runif(length(l0),-.025,.025),
ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",
axes=F,xlab="Nt",ylab="% rejected",main=who)
for(j in 2:length(levels(cond0$N.f))){#j<-2
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
if(not1==T){
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
par(new=T)
plot(cond0$Nt[cond11],dat[cond11,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}
axis(1,time_point_SIMULATE)
axis(2)
abline(h=woline,lty=3)
legend("topleft",paste0("N=",levels(cond0$N.f)),lty=1,col=1:length(levels(cond0$N.f)),pch=1:length(levels(cond0$N.f)))
}
par(mfrow=c(3,2))
plotfun2(res3,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res4false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3true,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
par(mfrow=c(3,2))
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2/df",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="rmsea",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="srmr",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="cfi",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="tli",woline=.05)
dev.off()
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2/df",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="rmsea",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="srmr",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="cfi",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2/df",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="rmsea",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="srmr",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="cfi",woline=.05)
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2/df")
par(mfrow=c(3,2))
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2/df")
# TYPE 1 ERROR RATE AND POWER
pdf("both_small_within_v2.pdf",height=3*4,width=2*4)
par(mfrow=c(3,2))
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2/df")
##########################################################################
# x-axis is N and separate lines for Nt
# plots type I error rate and power in the same picture, too crowded
##########################################################################
plotfun3 <- function(dat,miss0,misstyp,who,woline=.8,not1=F){
#dat<-res2_true
#miss0<-0
#who<-"chi2_p"
par(new=F)
j<-1
if(not1==T){
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j]
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
plot(cond0$Nt[cond01],dat[cond01,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="Nt",ylab="% rejected",main=who,lty=2)
par(new=T)
plot(cond0$Nt[cond11],dat[cond11,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="",ylab="")
for(j in 2:length(levels(cond0$N.f))){#j<-2
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
if(not1==T){
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j]
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
par(new=T)
plot(cond0$Nt[cond01],dat[cond01,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="",ylab="",lty=2)
par(new=T)
plot(cond0$Nt[cond11],dat[cond11,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="",ylab="")
}
axis(1,time_point_SIMULATE)
axis(2)
abline(h=woline,lty=3)
legend("topleft",paste0("N=",levels(cond0$N.f)),lty=1,col=1:length(levels(cond0$N.f)),pch=1:length(levels(cond0$N.f)))
}
# TYPE 1 ERROR RATE AND POWER
pdf("both_small_within_v2.pdf",height=3*4,width=2*4)
par(mfrow=c(3,2))
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2/df")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="rmsea")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="srmr")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="cfi")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="tli")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3,miss0=0.6,misstyp="tt",who="chi2_p")
plotfun3(res3,miss0=0.6,misstyp="tt",who="chi2/df")
plotfun3(res3false,miss0=0.6,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2_p")
plotfun3(res3false,miss0=0.3,misstyp="tt",who="chi2/df")
plotfun4 <- function(dat,miss0,misstyp,who,woline=.0,not1=F,ylim=ylim){
#dat<-res2
#miss0<-0.3
#who<-"chi2/df"
#misstyp<-"tt"
par(new=F)
j<-1
if(not1==T){
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j]
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
plot(cond0$Nt[cond01],dat[cond11,who]-dat[cond01,who],ylim=ylim,xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="Nt",ylab="Difference",main=who)
for(j in 2:length(levels(cond0$N.f))){#j<-2
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
if(not1==T){
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond01 <- cond0$miss==0 & cond0$type=="none" & cond0$N.f==levels(cond0$N.f)[j]
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
par(new=T)
plot(cond0$Nt[cond01],dat[cond11,who]-dat[cond01,who],ylim=ylim,xlim=c(0,15),col=j,pch=j,type="b",axes=F,xlab="",ylab="")
}
axis(1,time_point_SIMULATE)
axis(2)
abline(h=woline,lty=3)
legend("topleft",paste0("N=",levels(cond0$N.f)),lty=1,col=1:length(levels(cond0$N.f)),pch=1:length(levels(cond0$N.f)))
}
plotfun4(res3false,miss0=0.3,misstyp="tt1",who="chi2_p",not1=T,ylim=c(0,1))
# THE PLOT HE USED IN THE END:
pdf("type1error01_v2.pdf",height=3*4,width=2*4)
par(mfrow=c(3,2))
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2/df",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="rmsea",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="srmr",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="cfi",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="tli",woline=.05)
dev.off()
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
person_size_SIMULATE <- c(31, 91)
#person_size_SIMULATE <- c(91,121, 151, 181,211,61,31,501,1001,1501,2001,2501) #
time_point_SIMULATE <- c(1, 2)
#time_point_SIMULATE <- c(1:5,10,15,30) # Nt ,30
model_TRUE_MISS_SIMULATE <- c(0,.3,.6)
type_TRUE_MISS_SIMULATE <- c("tt","tt1", "none") # within time points, between time points #"none", HB: taken out because true tt/tt1 model used for type I error rates
run_Samples_SIMULATE <- 3
#run_Samples_SIMULATE <- 125
runpcs <- 2
# FIT INDICES WE ARE ACTUALLY INTERESTED IN
fitnom <- c("cfi","tli","rmsea","srmr","gfi","agfi","cgfi")
cond0 <- data.frame(matrix(NA,1000,4))
res3false <- res3true <- data.frame(matrix(NA,1000,length(fitnom)+2))
res4false <- res4true <- data.frame(matrix(NA,1000,length(fitnom)+2))
# output names
fitnom.res1 <- c("npar","fmin","chisq","df","pvalue","baseline.chisq","baseline.df",
"baseline.pvalue","cfi","tli","nnfi","rfi","nfi","pnfi","ifi","rni",
"logl","unrestricted.logl","aic","bic","ntotal","bic2","rmsea","rmsea.ci.lower",
"rmsea.ci.upper","rmsea.ci.level","rmsea.pvalue","rmsea.close.h0","rmsea.notclose.pvalue",
"rmsea.notclose.h0","rmr","rmr_nomean","srmr","srmr_bentler","srmr_bentler_nomean",
"crmr","crmr_nomean","srmr_mplus","srmr_mplus_nomean","cn_05","cn_01","gfi",
"agfi","pgfi","mfi","ecvi")
getstuff <- function(name_local_SIMULATE_Info){
res11 <- try(read.csv(file = name_local_SIMULATE_Info), silent = TRUE)
if(!inherits(res11, "try-error")){
res11
}else{
matrix(NA,run_Samples_SIMULATE,length(fitnom.res1))
}
}
current_dir <- "~/PycharmProjects/dsem_modelfit/exp/2024-12-14/"
setwd(current_dir)
ijk <- 1
for (time_point in time_point_SIMULATE) {
for (person_size in person_size_SIMULATE) {
for(type_MISS in type_TRUE_MISS_SIMULATE){
for (model_TRUE_MISS in model_TRUE_MISS_SIMULATE){
N <- person_size#<-211  # persons
Nt <- time_point#<-2 #time points
if(time_point*6<person_size){
if ((type_MISS == "tt" && model_TRUE_MISS == 0) ||
(type_MISS == "tt1" && model_TRUE_MISS == 0) ||
(type_MISS == "none" && model_TRUE_MISS == 0.3) ||
(type_MISS == "none" && model_TRUE_MISS == 0.6)) {
next # Skip to the next iteration
}
res1 <- res2 <- data.frame(matrix(NA,1,length(fitnom.res1)))
colnames(res1) <- colnames(res2) <- fitnom.res1
for(i in 1:runpcs){
# MISSSPECIFICATIONS
#name_local_SIMULATE_Info <- paste(current_dir, as.character(person_size), as.character(time_point), as.character(type_MISS),
#                                  as.character(model_TRUE_MISS), core, "_version03_rand", sep = "_")
# TRUE DGP
#name_local_SIMULATE_Info2 <- paste("C:\\holger\\SEM\\modelfit\\stanversion\\results_lavaan_version03_rand\\local", as.character(person_size),
#                                  as.character(time_point),as.character(type_MISS),as.character(model_TRUE_MISS),i ,"_version03_rand_true.RDS", sep = "_")
# MISSSPECIFICATIONS
Exp_name_info_miss <- paste("lavaan", person_size, time_point, type_MISS,
model_TRUE_MISS, "1__version03_rand.csv", sep = "_")
# TRUE DGP
Exp_name_info_true <- paste("lavaan_true", person_size, time_point, type_MISS,
model_TRUE_MISS, "1__version03_rand.csv", sep = "_")
pattern_miss <- paste0(current_dir, Exp_name_info_miss)
pattern_true <- paste0(current_dir, Exp_name_info_true)
res11_miss <- getstuff(pattern_miss)
res21_true <- getstuff(pattern_true)
#res11 <- getstuff(name_local_SIMULATE_Info)
#res21 <- getstuff(name_local_SIMULATE_Info2)
#colnames(res1_no) <- colnames(res11) <- fitnom.res1
res1_miss <- rbind(res1, res11_miss)
res2_true <- rbind(res2, res21_true)
}
#colnames(res11) <- colnames(res1m2) <- colnames(res1m2) <- colnames(res0)
#colnames(res1m12) <- colnames(res1m13) <- c("chi2","chi2_p")
res1_miss <- data.frame(res1_miss[-1,])
res2_true <- data.frame(res2_true[-1,])
res1_miss$cgfi <- res1_miss$gfi+(Nt*6+1)*Nt*6/res1_miss$npar/N
res2_true$cgfi <- res2_true$gfi+(Nt*6+1)*Nt*6/res2_true$npar/N
#dim(res1_miss)
# average scores m false (except none)
# FIT INDICES FOR WRONG MODEL
# AVERAGE SCORES
res3false[ijk,1] <- mean(res1_miss$chisq/res1_miss$df,na.rm=T) # CHI2
res3false[ijk,1:length(fitnom)+1] <- apply(res1_miss[fitnom],2,mean,na.rm=T)
res3false[ijk,length(fitnom)+2] <- length(na.omit(res1_miss$npar)) # LENGHT OF MISSING DATA
# average scores m true
# FIT INDICES FOR TRUE MODEL
res3true[ijk,1] <- mean(res2_true$chisq/res1_miss$df,na.rm=T)
res3true[ijk,1:length(fitnom)+1] <- apply(res2_true[fitnom],2,mean,na.rm=T)
res3true[ijk,length(fitnom)+2] <- length(na.omit(res2_true$npar))
# CUT OFFS
#cutoffs good fit (misfit): percentage of rejection
res4false[ijk,1] <- 1-mean(res1_miss$pvalue>.05,na.rm=T) # if p-value is larger than 5% then its 1 = percentage of rejection = POWER
res4false[ijk,2] <- 1-mean(res1_miss$chisq < 2*res1_miss$df,na.rm=T)
res4false[ijk,3] <- 1-mean(res1_miss$cfi > .95,na.rm=T)
res4false[ijk,4] <- 1-mean(res1_miss$tli > .97,na.rm=T)
res4false[ijk,5] <- 1-mean(res1_miss$rmsea < .05,na.rm=T)
res4false[ijk,6] <- 1-mean(res1_miss$srmr < .05,na.rm=T)
res4false[ijk,7] <- 1-mean(res1_miss$gfi > .95,na.rm=T)
res4false[ijk,8] <- 1-mean(res1_miss$agfi > .95,na.rm=T)
res4false[ijk,9] <- 1-mean(res1_miss$cgfi > .95,na.rm=T)
res4true[ijk,1] <- 1-mean(res2_true$pvalue>.05,na.rm=T) # TYPE 1 ERROR RATES
res4true[ijk,2] <- 1-mean(res2_true$chisq < 2*res1_miss$df,na.rm=T)
res4true[ijk,3] <- 1-mean(res2_true$cfi > .95,na.rm=T)
res4true[ijk,4] <- 1-mean(res2_true$tli > .97,na.rm=T)
res4true[ijk,5] <- 1-mean(res2_true$rmsea < .05,na.rm=T)
res4true[ijk,6] <- 1-mean(res2_true$srmr < .05,na.rm=T)
res4true[ijk,7] <- 1-mean(res2_true$gfi > .95,na.rm=T)
res4true[ijk,8] <- 1-mean(res2_true$agfi > .95,na.rm=T)
res4true[ijk,9] <- 1-mean(res2_true$cgfi > .95,na.rm=T)
# good fit is enough:
#cutoffs acceptable fit
#res4[ijk,1] <- 1-mean(res1_miss$pvalue>.05,na.rm=T)
#res4[ijk,2] <- 1-mean(res1_miss$chisq < 3*res1_miss$df,na.rm=T)
#res4[ijk,3] <- 1-mean(res1_miss$cfi > .90,na.rm=T)
#res4[ijk,4] <- 1-mean(res1_miss$tli > .95,na.rm=T)
#res4[ijk,5] <- 1-mean(res1_miss$rmsea < .08,na.rm=T)
#res4[ijk,6] <- 1-mean(res1_miss$srmr < .08,na.rm=T)
cond0[ijk,] <- c(time_point,person_size,type_MISS,model_TRUE_MISS)
ijk <- ijk+1 # adding a new line
}
}
}
}
}
#save all data
res3false2 <- res3false
res4false2 <- res4false
res3true2  <- res3true
res4true2  <- res4true
# omit missing data
res3false1 <- na.omit(cbind(cond0,res3false))[,-(1:4)]
res4false1 <- na.omit(cbind(cond0,res4false))[,-(1:4)]
res3true1 <- na.omit(cbind(cond0,res3true))[,-(1:4)]
res4true1 <- na.omit(cbind(cond0,res4true))[,-(1:4)]
cond1 <- na.omit(cbind(cond0,res4false))[,(1:4)]
cond2 <- na.omit(cbind(cond0,res4true))[,(1:4)]
# check dimensions
dim(cond1)
dim(cond2)
# put col names
res3false <- res3false1
res4false <- res4false1
res3true  <- res3true1
res4true  <- res4true1
cond0 <- cond1
colnames(cond0) <- c("Nt.f","N.f","type","miss.f")
# for plotting:
# as continous measure:
cond0$Nt <- as.numeric(cond0$Nt.f)
cond0$N <- as.numeric(cond0$N.f)
cond0$miss <- as.numeric(cond0$miss.f)
# as factor
cond0$Nt.f <- factor(cond0$Nt,levels = c("1","2","3","4","5","10","15","30"))
cond0$N.f <-  factor(cond0$N,levels=paste0(sort(person_size_SIMULATE)))
cond0$type <- as.factor(cond0$type)
colnames(res3false) <- colnames(res3true) <- c("chi2/df",fitnom,"nconv")
colnames(res4false) <- colnames(res4true) <- c("chi2_p","chi2/df",fitnom)
#cbind(cond0,res2_true)
cbind(cond0,res3false)
cbind(cond0,res4false)
range(res3false$nconv)
hist(res3false$nconv)
range(res3true$nconv)
hist(res3true$nconv)
##########################################################################
# x-axis is N and separate lines for Nt
##########################################################################
### PLOTTING, developing own plot
plotfun <- function(dat,miss0,misstyp,who,woline=.8,ord=F){ # who selects one of fit indices, wholine = 0.8 for power
#dat<-res3
#miss0<-0
#who<-"chi2_p"
#misstyp<-"none"
par(new=F)
j<-1
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$Nt.f==levels(cond0$Nt.f)[j]
if(ord==F){
plot(sort(cond0$N[cond11]),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(0,max(cond0$N)),col=j,pch=j,type="b",
axes=F,xlab="N",ylab="% rejected",main=who)
}else{
plot(sort(log(cond0$N[cond11])),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(log(min(cond0$N)),log(max(cond0$N))),col=j,pch=j,type="b",
axes=F,xlab="N",ylab="% rejected",main=who)
}
for(j in 2:length(levels(cond0$Nt.f))){#j <- length(levels(cond0$Nt.f))
par(new=T)
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$Nt.f==levels(cond0$Nt.f)[j]
if(ord==F){
plot(sort(cond0$N[cond11]),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(0,max(cond0$N)),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}else{
plot(sort(log(cond0$N[cond11])),dat[cond11,who][rank(cond0$N[cond11])],ylim=c(0,1),xlim=c(log(min(cond0$N)),log(max(cond0$N))),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}
}
if(ord==F){
axis(1,person_size_SIMULATE)
}else{
axis(1,at=log(person_size_SIMULATE),labels=person_size_SIMULATE)
}
axis(2)
abline(h=woline,lty=3)
legend("topright",paste0("N_t=",levels(cond0$Nt.f)),lty=1,col=1:length(levels(cond0$Nt.f)),pch=1:length(levels(cond0$Nt.f)))
}
##########################################################################
# x-axis is Nt and separate lines for N, looks better
##########################################################################
plotfun2 <- function(dat,miss0,misstyp,who,woline=.8,not1=F){
#dat<-res2_true
#miss0<-0
#who<-"chi2_p"
par(new=F)
j<-1
if(not1==T){
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
plot(cond0$Nt[cond11],dat[cond11,who],
#l0+runif(length(l0),-.025,.025),
ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",
axes=F,xlab="Nt",ylab="% rejected",main=who)
for(j in 2:length(levels(cond0$N.f))){#j<-2
#l0 <- dat[cond0$miss==miss0&cond0$N1==levels(cond0$N1)[j],who]
if(not1==T){
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j] & cond0$Nt!=1
}else{
cond11 <- cond0$miss==miss0 & cond0$type==misstyp & cond0$N.f==levels(cond0$N.f)[j]
}
par(new=T)
plot(cond0$Nt[cond11],dat[cond11,who],ylim=c(0,1),xlim=c(0,15),col=j,pch=j,type="b",
axes=F,ylab="",xlab="")
}
axis(1,time_point_SIMULATE)
axis(2)
abline(h=woline,lty=3)
legend("topleft",paste0("N=",levels(cond0$N.f)),lty=1,col=1:length(levels(cond0$N.f)),pch=1:length(levels(cond0$N.f)))
}
# THE PLOT HE USED IN THE END:
pdf("type1error01_v2.pdf",height=3*4,width=2*4)
par(mfrow=c(3,2))
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2_p",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="chi2/df",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="rmsea",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="srmr",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="cfi",woline=.05)
plotfun2(res3false,miss0=0.0,misstyp="none",who="tli",woline=.05)
